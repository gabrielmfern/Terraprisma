.input-container {
  width: 100%;
  min-height: 54px;
  height: fit-content;
  margin: 0;
  padding: 0;
  position: relative;
  border-radius: 7px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom: 2px solid var(--gray-3);

  color: var(--text-0);
  background: var(--gray-1);

  padding-inline: 12px;
  padding-top: 19px;
  padding-bottom: 8px;

  transition: .2s filter linear,
    .2s background-color linear;

  // these are the default values
  --text-color: var(--text-0);
  --label-color: var(--text-1);
  --focused-label-color: var(--text-2);
  --background-color: var(--gray-1);
  --border-color: var(--gray-3);

  &.gray-2 {
    --text-color: var(--text-1);
    --label-color: var(--text-2);
    --focused-label-color: var(--text-3);
    --background-color: var(--gray-2);
    --border-color: var(--gray-4);
  }

  &.gray-3 {
    --text-color: var(--text-2);
    --label-color: var(--text-3);
    --focused-label-color: var(--text-4);
    --background-color: var(--gray-3);
    --border-color: var(--gray-5);
  }

  &.gray-4 {
    --text-color: var(--text-3);
    --label-color: var(--text-4);
    --focused-label-color: var(--text-5);
    --background-color: var(--gray-4);
    --border-color: var(--gray-5);
  }

  &.error {
    --label-color: var(--danger);
    --text-color: var(--danger);
  }

  // sets the colors based on the variables created above
  background: var(--background-color);
  border-bottom: 2px solid var(--border-color);
  color: var(--text-color);

  .input-container-icon {
    --icon-font-size: 16px;

    position: absolute;
    width: min-content;
    height: min-content;
    left: calc(100% - var(--icon-font-size) - 8px);
    top: calc(50% - var(--icon-font-size) / 2);

    box-sizing: content-box;
    padding: 0;
    margin: 0;

    color: var(--label-color);
    font-size: var(--icon-font-size);

    user-select: none;
    pointer-events: none;
  }

  label {
    color: var(--label-color);

    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    transform-origin: top left;
  }

  &.focused label,
  &.has-content label {
    color: var(--focused-label-color);
  }

  &:hover:not(.focused) {
    filter: brightness(94%);
  }

  &.focused label,
  &.has-content label {
    top: 15.5px;
    opacity: 0.7;
    font-weight: 500;
    transform: translateY(-50%) scale(0.7);
  }

  &.focused.primary label {
    color: var(--primary);
    font-weight: 600;
  }

  &.focused.secondary label {
    color: var(--secondary);
    font-weight: 600;
  }

  &.focused.tertiary label {
    color: var(--tertiary);
    font-weight: 600;
  }

  &::after {
    content: '';
    position: absolute;
    left: 50%;
    top: 100%;
    width: 0;
    height: 1px;
    transform: translateX(-50%);
    transition: .2s width ease-out;
  }

  &.primary::after {
    background: var(--primary);
  }
  &.secondary::after {
    background: var(--secondary);
  }
  &.tertiary::after {
    background: var(--tertiary);
  }

  &.focused::after {
    width: 100%;
    height: 2px;
  }
}

.error .input-container,
.error.input-container {
  border-bottom: 3px solid var(--danger);

  &::after {
    transition: .2s width ease-out,
      .2s height ease-out !important;
    background: var(--danger);
    width: 100%;
  }
}

@function add-transparency($color, $percentage) {
  @return color-mix(in srgb, $color, transparent $percentage);
}

.input-container.disabled {
  opacity: 0.4;
  filter: brightness(95%) !important;
}

